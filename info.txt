SEVERITYCODE      194673 non-null int64
X                 189339 non-null float64
Y                 189339 non-null float64
OBJECTID          194673 non-null int64
INCKEY            194673 non-null int64
COLDETKEY         194673 non-null int64
REPORTNO          194673 non-null object
STATUS            194673 non-null object
ADDRTYPE          192747 non-null object
INTKEY            65070 non-null float64
LOCATION          191996 non-null object
EXCEPTRSNCODE     84811 non-null object
EXCEPTRSNDESC     5638 non-null object
SEVERITYCODE.1    194673 non-null int64
SEVERITYDESC      194673 non-null object
COLLISIONTYPE     189769 non-null object
PERSONCOUNT       194673 non-null int64
PEDCOUNT          194673 non-null int64
PEDCYLCOUNT       194673 non-null int64
VEHCOUNT          194673 non-null int64
INCDATE           194673 non-null object
INCDTTM           194673 non-null object
JUNCTIONTYPE      188344 non-null object
SDOT_COLCODE      194673 non-null int64
SDOT_COLDESC      194673 non-null object
INATTENTIONIND    29805 non-null object
UNDERINFL         189789 non-null object
WEATHER           189592 non-null object
ROADCOND          189661 non-null object
LIGHTCOND         189503 non-null object
PEDROWNOTGRNT     4667 non-null object
SDOTCOLNUM        114936 non-null float64
SPEEDING          9333 non-null object
ST_COLCODE        194655 non-null object
ST_COLDESC        189769 non-null object
SEGLANEKEY        194673 non-null int64
CROSSWALKKEY      194673 non-null int64
HITPARKEDCAR      194673 non-null object







SEVERITYCODE    3-FATALITY 2B-SERIOUS INJURY 2-INJURY 1-PROP DAMAGE 0-UNKNOWN     
X                 
Y                 
OBJECTID          
INCKEY          PRIMARY INCIDENT KEY
COLDETKEY       SECONDARY INCIDENT KEY
REPORTNO          
STATUS            
ADDRTYPE        COLLISION ADDRESS TYPE (ALLEY,BLOCK,INTERSECTION)          
INTKEY          KEY THAT CORRESPONDS TO INTERS. ASSOCIATED WITH COLLISION     
LOCATION        DESCRIPTION OF GENERAL LOCATION OF COLLISION PLACE      
EXCEPTRSNCODE     
EXCEPTRSNDESC         
SEVERITYDESC    Detailed description of severity
COLLISIONTYPE     
PERSONCOUNT     number of people involved   
PEDCOUNT        number of pedestrians involved
PEDCYLCOUNT     number of bicycles involved 
VEHCOUNT        number of vehicles involved  
INJURIES        number of total injuries
SERIOUSINJURIES number of total serious injuries
FATALITIES      number of fatalities
INCDATE         date of incident
INCDTTM         date and time of incident          
JUNCTIONTYPE    category of junction at which collision took place 
SDOT_COLCODE    code given to collision given by SDOT  
SDOT_COLDESC    description of collision correspondent to code 
INATTENTIONIND  whether or not the collision was due to inattention 
UNDERINFL       drug/alcohol influence (Y/N)
WEATHER         weather during accident
ROADCOND        road condition  
LIGHTCOND       lights conditions  
PEDROWNOTGRNT   pedestrian was on cross lines or not
SPEEDING        speeding influenced incident (Y/N)
ST_COLDESC      description corresponding to state coding designation
SEGLANEKEY      key for lane segment in which collision occured   
CROSSWALKKEY    key for crosswalk at which collision took place   
HITPARKEDCAR    hit parked car (y/n)


'MOTOR VEHICLE STRUCK MOTOR VEHICLE, FRONT END AT ANGLE',
'MOTOR VEHICLE STRUCK MOTOR VEHICLE, LEFT SIDE SIDESWIPE',
'MOTOR VEHICLE STRUCK MOTOR VEHICLE, REAR END',
'PEDALCYCLIST STRUCK MOTOR VEHICLE FRONT END AT ANGLE',
'MOTOR VEHICLE STRUCK MOTOR VEHICLE, LEFT SIDE AT ANGLE',
'MOTOR VEHICLE STRUCK OBJECT IN ROAD',
'MOTOR VEHICLE RAN OFF ROAD - HIT FIXED OBJECT',
'MOTOR VEHICLE STRUCK PEDALCYCLIST, FRONT END AT ANGLE',
'DRIVERLESS VEHICLE STRUCK MOTOR VEHICLE REAR END',
'NOT ENOUGH INFORMATION / NOT APPLICABLE',
'MOTOR VEHCILE STRUCK PEDESTRIAN',
'PEDALCYCLIST OVERTURNED IN ROAD',
'MOTOR VEHICLE STRUCK MOTOR VEHICLE, RIGHT SIDE AT ANGLE',
'MOTOR VEHICLE STRUCK PEDALCYCLIST, REAR END',
'MOTOR VEHICLE STRUCK PEDALCYCLIST, LEFT SIDE SIDESWIPE',
'MOTOR VEHICLE OVERTURNED IN ROAD',
'MOTOR VEHICLE RAN OFF ROAD - NO COLLISION',
'DRIVERLESS VEHICLE RAN OFF ROAD - HIT FIXED OBJECT',
'MOTOR VEHICLE STRUCK MOTOR VEHICLE, RIGHT SIDE SIDESWIPE',
'PEDALCYCLIST STRUCK MOTOR VEHICLE RIGHT SIDE SIDESWIPE',
'DRIVERLESS VEHICLE STRUCK MOTOR VEHICLE LEFT SIDE AT ANGLE',
'PEDALCYCLIST STRUCK MOTOR VEHICLE LEFT SIDE SIDESWIPE',
'PEDALCYCLIST STRUCK MOTOR VEHICLE REAR END',
'DRIVERLESS VEHICLE STRUCK MOTOR VEHICLE FRONT END AT ANGLE',
'DRIVERLESS VEHICLE STRUCK PEDESTRIAN',
'DRIVERLESS VEHICLE STRUCK MOTOR VEHICLE RIGHT SIDE AT ANGLE ',
'MOTOR VEHICLE STRUCK TRAIN', 'PEDALCYCLIST STRUCK OBJECT IN ROAD',
'DRIVERLESS VEHICLE STRUCK MOTOR VEHICLE LEFT SIDE SIDESWIPE',
'PEDALCYCLIST STRUCK PEDESTRIAN',
'MOTOR VEHICLE STRUCK PEDALCYCLIST, RIGHT SIDE SIDESWIPE',
'PEDALCYCLIST STRUCK PEDALCYCLIST FRONT END AT ANGLE',
'DRIVERLESS VEHICLE RAN OFF ROAD - NO COLLISION',
'PEDALCYCLIST STRUCK PEDALCYCLIST REAR END',
'DRIVERLESS VEHICLE STRUCK MOTOR VEHICLE RIGHT SIDE SIDESWIPE',
'PEDALCYCLIST STRUCK MOTOR VEHICLE LEFT SIDE AT ANGLE',
'DRIVERLESS VEHICLE STRUCK OBJECT IN ROADWAY',
'PEDALCYCLIST RAN OFF ROAD - HIT FIXED OBJECT',
'PEDALCYCLIST STRUCK MOTOR VEHICLE RIGHT SIDE AT ANGLE'



# Metodo 1 per trovare rows con nan values in dataframe
df1_nan = df1.isnull()
rows_nan = df1_nan.any(axis=1)
rows_nan = df1[rows_nan]

# Metodo 2 per trovare rows con nan values in dataframe
r, _ = np.where(df2.isna())
r = np.unique(r).tolist()

# Metodo per cercare parti di dataframe e ottenere value_counts
df2[(df2['SDOT_COLDESC']=='MOTOR VEHICLE STRUCK PEDALCYCLIST, LEFT SIDE SIDESWIPE')
   & (df2['COLLISIONTYPE'].isnull()) ]

# Metodo per applicare una mask per il datframe per operare su di esso
mask=\
(df2['SDOT_COLDESC']=='MOTOR VEHICLE STRUCK PEDALCYCLIST, LEFT SIDE SIDESWIPE')& \
     (df2['COLLISIONTYPE'].isnull())  

df2['COLLISIONTYPE'][mask].value_counts()

# Metodo per editare i valori nan e riempirli in una maniera che rifletta la percentuale di 
  presenza dei valori non nan nella colonna, faccio questo perche seguire la statistisca non avendo
  altre info è sempre meglio che non fare un cazzo questa è una funzione flessibile alla quale basta 
  dare come input il dataframe e la colonna sulla quale vogliamo operare il fillna()
  Abbastanza figa come funzione 

# def fill_na_by_percentage(df, col):
#     r, _ = np.where(df[[col]].isna())
#     r = np.unique(r).tolist()
#     l = len(r)
#     print(l)

#     ad = df[col].value_counts(normalize = True)
#     # print(ad)
#     for i in range(len(ad)):
#         L = int(np.rint(l * ad[i]))
#         print(L)
#     #     df[col].fillna(ad.keys()[i], limit = L, inplace = True )

# fill_na_by_percentage(df,'ROADCOND')